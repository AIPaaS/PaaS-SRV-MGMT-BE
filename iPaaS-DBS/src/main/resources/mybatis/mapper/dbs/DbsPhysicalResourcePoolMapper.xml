<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.paas.ipaas.dbs.dao.interfaces.DbsPhysicalResourcePoolMapper" >
  <resultMap id="BaseResultMap" type="com.ai.paas.ipaas.dbs.dao.mapper.bo.DbsPhysicalResourcePool" >
    <id column="res_id" property="resId" jdbcType="INTEGER" />
    <result column="res_host" property="resHost" jdbcType="VARCHAR" />
    <result column="res_name" property="resName" jdbcType="VARCHAR" />
    <result column="res_port" property="resPort" jdbcType="INTEGER" />
    <result column="res_instance" property="resInstance" jdbcType="VARCHAR" />
    <result column="res_user" property="resUser" jdbcType="VARCHAR" />
    <result column="res_password" property="resPassword" jdbcType="VARCHAR" />
    <result column="is_used" property="isUsed" jdbcType="CHAR" />
    <result column="res_status" property="resStatus" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="used_time" property="usedTime" jdbcType="TIMESTAMP" />
    <result column="create_author" property="createAuthor" jdbcType="VARCHAR" />
    <result column="last_modify_time" property="lastModifyTime" jdbcType="TIMESTAMP" />
    <result column="last_modify_author" property="lastModifyAuthor" jdbcType="VARCHAR" />
    <result column="ms_flag" property="msFlag" jdbcType="CHAR" />
    <result column="res_use_type" property="resUseType" jdbcType="CHAR" />
    <result column="logic_id" property="logicId" jdbcType="INTEGER" />
    <result column="res_super_user" property="resSuperUser" jdbcType="VARCHAR" />
    <result column="res_super_password" property="resSuperPassword" jdbcType="VARCHAR" />
    <result column="conf_addr" property="confAddr" jdbcType="VARCHAR" />
    <result column="agent_port" property="agentPort" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    res_id, res_host, res_name, res_port, res_instance, res_user, res_password, is_used, 
    res_status, create_time, used_time, create_author, last_modify_time, last_modify_author, 
    ms_flag, res_use_type, logic_id, res_super_user, res_super_password, conf_addr, agent_port
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.paas.ipaas.dbs.dao.mapper.bo.DbsPhysicalResourcePoolCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dbs_physical_resource_pool
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Integer" >
    select 
    <include refid="Base_Column_List" />
    from dbs_physical_resource_pool
    where res_id = #{resId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer" >
    delete from dbs_physical_resource_pool
    where res_id = #{resId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.paas.ipaas.dbs.dao.mapper.bo.DbsPhysicalResourcePoolCriteria" >
    delete from dbs_physical_resource_pool
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.paas.ipaas.dbs.dao.mapper.bo.DbsPhysicalResourcePool" >
    insert into dbs_physical_resource_pool (res_id, res_host, res_name, 
      res_port, res_instance, res_user, 
      res_password, is_used, res_status, 
      create_time, used_time, create_author, 
      last_modify_time, last_modify_author, ms_flag, 
      res_use_type, logic_id, res_super_user, 
      res_super_password, conf_addr, agent_port
      )
    values (#{resId,jdbcType=INTEGER}, #{resHost,jdbcType=VARCHAR}, #{resName,jdbcType=VARCHAR}, 
      #{resPort,jdbcType=INTEGER}, #{resInstance,jdbcType=VARCHAR}, #{resUser,jdbcType=VARCHAR}, 
      #{resPassword,jdbcType=VARCHAR}, #{isUsed,jdbcType=CHAR}, #{resStatus,jdbcType=CHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{usedTime,jdbcType=TIMESTAMP}, #{createAuthor,jdbcType=VARCHAR}, 
      #{lastModifyTime,jdbcType=TIMESTAMP}, #{lastModifyAuthor,jdbcType=VARCHAR}, #{msFlag,jdbcType=CHAR}, 
      #{resUseType,jdbcType=CHAR}, #{logicId,jdbcType=INTEGER}, #{resSuperUser,jdbcType=VARCHAR}, 
      #{resSuperPassword,jdbcType=VARCHAR}, #{confAddr,jdbcType=VARCHAR}, #{agentPort,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ai.paas.ipaas.dbs.dao.mapper.bo.DbsPhysicalResourcePool" >
    insert into dbs_physical_resource_pool
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="resId != null" >
        res_id,
      </if>
      <if test="resHost != null" >
        res_host,
      </if>
      <if test="resName != null" >
        res_name,
      </if>
      <if test="resPort != null" >
        res_port,
      </if>
      <if test="resInstance != null" >
        res_instance,
      </if>
      <if test="resUser != null" >
        res_user,
      </if>
      <if test="resPassword != null" >
        res_password,
      </if>
      <if test="isUsed != null" >
        is_used,
      </if>
      <if test="resStatus != null" >
        res_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="usedTime != null" >
        used_time,
      </if>
      <if test="createAuthor != null" >
        create_author,
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time,
      </if>
      <if test="lastModifyAuthor != null" >
        last_modify_author,
      </if>
      <if test="msFlag != null" >
        ms_flag,
      </if>
      <if test="resUseType != null" >
        res_use_type,
      </if>
      <if test="logicId != null" >
        logic_id,
      </if>
      <if test="resSuperUser != null" >
        res_super_user,
      </if>
      <if test="resSuperPassword != null" >
        res_super_password,
      </if>
      <if test="confAddr != null" >
        conf_addr,
      </if>
      <if test="agentPort != null" >
        agent_port,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="resId != null" >
        #{resId,jdbcType=INTEGER},
      </if>
      <if test="resHost != null" >
        #{resHost,jdbcType=VARCHAR},
      </if>
      <if test="resName != null" >
        #{resName,jdbcType=VARCHAR},
      </if>
      <if test="resPort != null" >
        #{resPort,jdbcType=INTEGER},
      </if>
      <if test="resInstance != null" >
        #{resInstance,jdbcType=VARCHAR},
      </if>
      <if test="resUser != null" >
        #{resUser,jdbcType=VARCHAR},
      </if>
      <if test="resPassword != null" >
        #{resPassword,jdbcType=VARCHAR},
      </if>
      <if test="isUsed != null" >
        #{isUsed,jdbcType=CHAR},
      </if>
      <if test="resStatus != null" >
        #{resStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="usedTime != null" >
        #{usedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createAuthor != null" >
        #{createAuthor,jdbcType=VARCHAR},
      </if>
      <if test="lastModifyTime != null" >
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyAuthor != null" >
        #{lastModifyAuthor,jdbcType=VARCHAR},
      </if>
      <if test="msFlag != null" >
        #{msFlag,jdbcType=CHAR},
      </if>
      <if test="resUseType != null" >
        #{resUseType,jdbcType=CHAR},
      </if>
      <if test="logicId != null" >
        #{logicId,jdbcType=INTEGER},
      </if>
      <if test="resSuperUser != null" >
        #{resSuperUser,jdbcType=VARCHAR},
      </if>
      <if test="resSuperPassword != null" >
        #{resSuperPassword,jdbcType=VARCHAR},
      </if>
      <if test="confAddr != null" >
        #{confAddr,jdbcType=VARCHAR},
      </if>
      <if test="agentPort != null" >
        #{agentPort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.paas.ipaas.dbs.dao.mapper.bo.DbsPhysicalResourcePoolCriteria" resultType="java.lang.Integer" >
    select count(*) from dbs_physical_resource_pool
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update dbs_physical_resource_pool
    <set >
      <if test="record.resId != null" >
        res_id = #{record.resId,jdbcType=INTEGER},
      </if>
      <if test="record.resHost != null" >
        res_host = #{record.resHost,jdbcType=VARCHAR},
      </if>
      <if test="record.resName != null" >
        res_name = #{record.resName,jdbcType=VARCHAR},
      </if>
      <if test="record.resPort != null" >
        res_port = #{record.resPort,jdbcType=INTEGER},
      </if>
      <if test="record.resInstance != null" >
        res_instance = #{record.resInstance,jdbcType=VARCHAR},
      </if>
      <if test="record.resUser != null" >
        res_user = #{record.resUser,jdbcType=VARCHAR},
      </if>
      <if test="record.resPassword != null" >
        res_password = #{record.resPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.isUsed != null" >
        is_used = #{record.isUsed,jdbcType=CHAR},
      </if>
      <if test="record.resStatus != null" >
        res_status = #{record.resStatus,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.usedTime != null" >
        used_time = #{record.usedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createAuthor != null" >
        create_author = #{record.createAuthor,jdbcType=VARCHAR},
      </if>
      <if test="record.lastModifyTime != null" >
        last_modify_time = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyAuthor != null" >
        last_modify_author = #{record.lastModifyAuthor,jdbcType=VARCHAR},
      </if>
      <if test="record.msFlag != null" >
        ms_flag = #{record.msFlag,jdbcType=CHAR},
      </if>
      <if test="record.resUseType != null" >
        res_use_type = #{record.resUseType,jdbcType=CHAR},
      </if>
      <if test="record.logicId != null" >
        logic_id = #{record.logicId,jdbcType=INTEGER},
      </if>
      <if test="record.resSuperUser != null" >
        res_super_user = #{record.resSuperUser,jdbcType=VARCHAR},
      </if>
      <if test="record.resSuperPassword != null" >
        res_super_password = #{record.resSuperPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.confAddr != null" >
        conf_addr = #{record.confAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.agentPort != null" >
        agent_port = #{record.agentPort,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update dbs_physical_resource_pool
    set res_id = #{record.resId,jdbcType=INTEGER},
      res_host = #{record.resHost,jdbcType=VARCHAR},
      res_name = #{record.resName,jdbcType=VARCHAR},
      res_port = #{record.resPort,jdbcType=INTEGER},
      res_instance = #{record.resInstance,jdbcType=VARCHAR},
      res_user = #{record.resUser,jdbcType=VARCHAR},
      res_password = #{record.resPassword,jdbcType=VARCHAR},
      is_used = #{record.isUsed,jdbcType=CHAR},
      res_status = #{record.resStatus,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      used_time = #{record.usedTime,jdbcType=TIMESTAMP},
      create_author = #{record.createAuthor,jdbcType=VARCHAR},
      last_modify_time = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      last_modify_author = #{record.lastModifyAuthor,jdbcType=VARCHAR},
      ms_flag = #{record.msFlag,jdbcType=CHAR},
      res_use_type = #{record.resUseType,jdbcType=CHAR},
      logic_id = #{record.logicId,jdbcType=INTEGER},
      res_super_user = #{record.resSuperUser,jdbcType=VARCHAR},
      res_super_password = #{record.resSuperPassword,jdbcType=VARCHAR},
      conf_addr = #{record.confAddr,jdbcType=VARCHAR},
      agent_port = #{record.agentPort,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.paas.ipaas.dbs.dao.mapper.bo.DbsPhysicalResourcePool" >
    update dbs_physical_resource_pool
    <set >
      <if test="resHost != null" >
        res_host = #{resHost,jdbcType=VARCHAR},
      </if>
      <if test="resName != null" >
        res_name = #{resName,jdbcType=VARCHAR},
      </if>
      <if test="resPort != null" >
        res_port = #{resPort,jdbcType=INTEGER},
      </if>
      <if test="resInstance != null" >
        res_instance = #{resInstance,jdbcType=VARCHAR},
      </if>
      <if test="resUser != null" >
        res_user = #{resUser,jdbcType=VARCHAR},
      </if>
      <if test="resPassword != null" >
        res_password = #{resPassword,jdbcType=VARCHAR},
      </if>
      <if test="isUsed != null" >
        is_used = #{isUsed,jdbcType=CHAR},
      </if>
      <if test="resStatus != null" >
        res_status = #{resStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="usedTime != null" >
        used_time = #{usedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createAuthor != null" >
        create_author = #{createAuthor,jdbcType=VARCHAR},
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyAuthor != null" >
        last_modify_author = #{lastModifyAuthor,jdbcType=VARCHAR},
      </if>
      <if test="msFlag != null" >
        ms_flag = #{msFlag,jdbcType=CHAR},
      </if>
      <if test="resUseType != null" >
        res_use_type = #{resUseType,jdbcType=CHAR},
      </if>
      <if test="logicId != null" >
        logic_id = #{logicId,jdbcType=INTEGER},
      </if>
      <if test="resSuperUser != null" >
        res_super_user = #{resSuperUser,jdbcType=VARCHAR},
      </if>
      <if test="resSuperPassword != null" >
        res_super_password = #{resSuperPassword,jdbcType=VARCHAR},
      </if>
      <if test="confAddr != null" >
        conf_addr = #{confAddr,jdbcType=VARCHAR},
      </if>
      <if test="agentPort != null" >
        agent_port = #{agentPort,jdbcType=INTEGER},
      </if>
    </set>
    where res_id = #{resId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.paas.ipaas.dbs.dao.mapper.bo.DbsPhysicalResourcePool" >
    update dbs_physical_resource_pool
    set res_host = #{resHost,jdbcType=VARCHAR},
      res_name = #{resName,jdbcType=VARCHAR},
      res_port = #{resPort,jdbcType=INTEGER},
      res_instance = #{resInstance,jdbcType=VARCHAR},
      res_user = #{resUser,jdbcType=VARCHAR},
      res_password = #{resPassword,jdbcType=VARCHAR},
      is_used = #{isUsed,jdbcType=CHAR},
      res_status = #{resStatus,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      used_time = #{usedTime,jdbcType=TIMESTAMP},
      create_author = #{createAuthor,jdbcType=VARCHAR},
      last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      last_modify_author = #{lastModifyAuthor,jdbcType=VARCHAR},
      ms_flag = #{msFlag,jdbcType=CHAR},
      res_use_type = #{resUseType,jdbcType=CHAR},
      logic_id = #{logicId,jdbcType=INTEGER},
      res_super_user = #{resSuperUser,jdbcType=VARCHAR},
      res_super_password = #{resSuperPassword,jdbcType=VARCHAR},
      conf_addr = #{confAddr,jdbcType=VARCHAR},
      agent_port = #{agentPort,jdbcType=INTEGER}
    where res_id = #{resId,jdbcType=INTEGER}
  </update>
</mapper>