<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.paas.ipaas.txs.dao.interfaces.TxsResourcePoolMapper" >
  <resultMap id="BaseResultMap" type="com.ai.paas.ipaas.txs.dao.mapper.bo.TxsResourcePool" >
    <id column="txs_resource_id" property="txsResourceId" jdbcType="INTEGER" />
    <result column="zk_path" property="zkPath" jdbcType="VARCHAR" />
    <result column="zk_node" property="zkNode" jdbcType="VARCHAR" />
    <result column="resource_state" property="resourceState" jdbcType="INTEGER" />
    <result column="resource_time" property="resourceTime" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    txs_resource_id, zk_path, zk_node, resource_state, resource_time, remarks
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.paas.ipaas.txs.dao.mapper.bo.TxsResourcePoolCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from txs_resource_pool
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="int" >
    select 
    <include refid="Base_Column_List" />
    from txs_resource_pool
    where txs_resource_id = #{txsResourceId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="int" >
    delete from txs_resource_pool
    where txs_resource_id = #{txsResourceId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.paas.ipaas.txs.dao.mapper.bo.TxsResourcePoolCriteria" >
    delete from txs_resource_pool
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.paas.ipaas.txs.dao.mapper.bo.TxsResourcePool" >
    insert into txs_resource_pool (txs_resource_id, zk_path, zk_node, 
      resource_state, resource_time, remarks
      )
    values (#{txsResourceId,jdbcType=INTEGER}, #{zkPath,jdbcType=VARCHAR}, #{zkNode,jdbcType=VARCHAR}, 
      #{resourceState,jdbcType=INTEGER}, #{resourceTime,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ai.paas.ipaas.txs.dao.mapper.bo.TxsResourcePool" >
    insert into txs_resource_pool
    <trim prefix="(" suffix=")" suffixOverrides="," >
      txs_resource_id,
      <if test="zkPath != null" >
        zk_path,
      </if>
      <if test="zkNode != null" >
        zk_node,
      </if>
      resource_state,
      <if test="resourceTime != null" >
        resource_time,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{txsResourceId,jdbcType=INTEGER},
      <if test="zkPath != null" >
        #{zkPath,jdbcType=VARCHAR},
      </if>
      <if test="zkNode != null" >
        #{zkNode,jdbcType=VARCHAR},
      </if>
      #{resourceState,jdbcType=INTEGER},
      <if test="resourceTime != null" >
        #{resourceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.paas.ipaas.txs.dao.mapper.bo.TxsResourcePoolCriteria" resultType="java.lang.Integer" >
    select count(*) from txs_resource_pool
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update txs_resource_pool
    <set >
      <if test="record.txsResourceId != null" >
        txs_resource_id = #{record.txsResourceId,jdbcType=INTEGER},
      </if>
      <if test="record.zkPath != null" >
        zk_path = #{record.zkPath,jdbcType=VARCHAR},
      </if>
      <if test="record.zkNode != null" >
        zk_node = #{record.zkNode,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceState != null" >
        resource_state = #{record.resourceState,jdbcType=INTEGER},
      </if>
      <if test="record.resourceTime != null" >
        resource_time = #{record.resourceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update txs_resource_pool
    set txs_resource_id = #{record.txsResourceId,jdbcType=INTEGER},
      zk_path = #{record.zkPath,jdbcType=VARCHAR},
      zk_node = #{record.zkNode,jdbcType=VARCHAR},
      resource_state = #{record.resourceState,jdbcType=INTEGER},
      resource_time = #{record.resourceTime,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.paas.ipaas.txs.dao.mapper.bo.TxsResourcePool" >
    update txs_resource_pool
    <set >
      <if test="zkPath != null" >
        zk_path = #{zkPath,jdbcType=VARCHAR},
      </if>
      <if test="zkNode != null" >
        zk_node = #{zkNode,jdbcType=VARCHAR},
      </if>
      <if test="resourceState != null" >
        resource_state = #{resourceState,jdbcType=INTEGER},
      </if>
      <if test="resourceTime != null" >
        resource_time = #{resourceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where txs_resource_id = #{txsResourceId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.paas.ipaas.txs.dao.mapper.bo.TxsResourcePool" >
    update txs_resource_pool
    set zk_path = #{zkPath,jdbcType=VARCHAR},
      zk_node = #{zkNode,jdbcType=VARCHAR},
      resource_state = #{resourceState,jdbcType=INTEGER},
      resource_time = #{resourceTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR}
    where txs_resource_id = #{txsResourceId,jdbcType=INTEGER}
  </update>
</mapper>